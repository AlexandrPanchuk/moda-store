<?php

namespace app\modules\admin\models;

use app\components\helper\TranslateHelper;
use Yii;

/**
 * This is the model class for table "category".
 *
 * @property integer $id
 * @property integer $parent_id
 * @property string $name
 * @property string $keywords
 * @property string $description
 */
class Category extends \yii\db\ActiveRecord
{

    public $image;

    public function behaviors()
    {
        return [
            'image' => [
                'class' => 'rico\yii2images\behaviors\ImageBehave',
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'category';
    }

    public function getCategory()
    {
        return $this->hasOne(Category::className(), ['id' => 'parent_id']);
    }

    public function getCategoryName(){
        $category = $this->category;
        return $category ? $category->name : 'Самостоятельная категория';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['parent_id', 'is_catalog'], 'integer'],
            [['name'], 'required'],
            [['name', 'keywords', 'description', 'alias'], 'string', 'max' => 255],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => '№ категории',
            'parent_id' => 'Родительская категория',
            'name' => 'Название',
            'alias' => 'Алиас',
            'keywords' => 'Ключевые слова',
            'description' => 'Мета-описание',
            'is_catalog' => 'Является ли каталогом для подкатегорий',
            'image' => 'Фото',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProducts()
    {
        return $this->hasMany(Product::className(), ['category_id' => 'id']);
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        Yii::$app->db->createCommand('UPDATE category SET alias = :alias WHERE id = :id ',
            ['alias' => TranslateHelper::translit($this->name), 'id' => $this->id])->execute();
    }

    public function deleteImage()
    {
        $path = 'upload/store/'.$this->image->baseName. '.' . $this->image->extension;
        $this->image->removeImage($path);
    }

    public function upload()
    {
        if ($this->validate()) {
            $path = 'upload/store/'.$this->image->baseName. '.' . $this->image->extension;
            $this->image->saveAs($path);
            $this->attachImage($path, true);
            @unlink($path);
            return true;
        } else {
            return false;
        }
    }

}
